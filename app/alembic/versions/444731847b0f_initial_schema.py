"""Initial schema

Revision ID: 444731847b0f
Revises: 
Create Date: 2025-07-09 14:04:17.123491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '444731847b0f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clinics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('state', sa.String(length=60), nullable=False),
    sa.Column('city', sa.String(length=60), nullable=False),
    sa.Column('phone_whatsapp', sa.String(length=20), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=60), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('title_en', sa.String(length=120), nullable=False),
    sa.Column('description_en', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('languages',
    sa.Column('code', sa.String(length=8), nullable=False),
    sa.Column('native_name', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('redflags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=64), nullable=False),
    sa.Column('name_en', sa.String(length=120), nullable=False),
    sa.Column('ataglance_en', sa.Text(), nullable=False),
    sa.Column('mini_cme_vimeo', sa.String(length=255), nullable=True),
    sa.Column('long_cme_vimeo', sa.String(length=255), nullable=True),
    sa.Column('references_json', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('citation_text', sa.Text(), nullable=False),
    sa.Column('doi_or_url', sa.String(length=512), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host', sa.Enum('VIMEO', 'YOUTUBE', name='videohost'), nullable=False),
    sa.Column('video_id', sa.String(length=64), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=False),
    sa.Column('duration_sec', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('patient_phone_e164', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_patient_day', 'patient_sessions', ['patient_phone_e164', 'created_at'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('order_idx', sa.Integer(), nullable=False),
    sa.Column('question_key', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('form_id', 'order_idx', name='uq_question_order')
    )
    op.create_table('redflag_localised',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('redflag_id', sa.Integer(), nullable=False),
    sa.Column('lang_code', sa.String(length=8), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('ataglance_text', sa.Text(), nullable=False),
    sa.Column('patient_video_youtube', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['lang_code'], ['languages.code'], ),
    sa.ForeignKeyConstraint(['redflag_id'], ['redflags.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('redflag_id', 'lang_code', name='uq_rf_loc')
    )
    op.create_table('redflag_references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('redflag_id', sa.Integer(), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['redflag_id'], ['redflags.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['references.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('redflag_id', 'reference_id', name='uq_rf_ref')
    )
    op.create_table('redflag_videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('redflag_id', sa.Integer(), nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MINI_CME', 'LONG_CME', 'PATIENT', name='videotype'), nullable=False),
    sa.ForeignKeyConstraint(['redflag_id'], ['redflags.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('redflag_id', 'video_id', 'type', name='uq_rf_video')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('google_sub', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('DOCTOR', 'STAFF', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('phone_e164', sa.String(length=20), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('google_sub')
    )
    op.create_table('form_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('lang_code', sa.String(length=8), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.ForeignKeyConstraint(['lang_code'], ['languages.code'], ),
    sa.ForeignKeyConstraint(['session_id'], ['patient_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_session_day', 'form_submissions', ['session_id', 'submitted_at'], unique=False)
    op.create_table('options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('order_idx', sa.Integer(), nullable=False),
    sa.Column('option_key', sa.String(length=64), nullable=False),
    sa.Column('is_redflag', sa.Boolean(), nullable=False),
    sa.Column('redflag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['redflag_id'], ['redflags.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'order_idx', name='uq_opt_order')
    )
    op.create_table('question_localised',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('lang_code', sa.String(length=8), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['lang_code'], ['languages.code'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question_id', 'lang_code', name='uq_q_loc')
    )
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_key', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['form_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('option_localised',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('lang_code', sa.String(length=8), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['lang_code'], ['languages.code'], ),
    sa.ForeignKeyConstraint(['option_id'], ['options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('option_id', 'lang_code', name='uq_opt_loc')
    )
    op.create_table('submission_redflags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('redflag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['redflag_id'], ['redflags.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['form_submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('submission_redflags')
    op.drop_table('option_localised')
    op.drop_table('answers')
    op.drop_table('question_localised')
    op.drop_table('options')
    op.drop_index('ix_session_day', table_name='form_submissions')
    op.drop_table('form_submissions')
    op.drop_table('users')
    op.drop_table('redflag_videos')
    op.drop_table('redflag_references')
    op.drop_table('redflag_localised')
    op.drop_table('questions')
    op.drop_index('ix_patient_day', table_name='patient_sessions')
    op.drop_table('patient_sessions')
    op.drop_table('videos')
    op.drop_table('references')
    op.drop_table('redflags')
    op.drop_table('languages')
    op.drop_table('forms')
    op.drop_table('clinics')
    # ### end Alembic commands ###
